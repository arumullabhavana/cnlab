import React, { useState } from 'react';
import './App.css'; // Import custom styles for voting

// Import images
import optionAImage from './images/optionA.png';
import optionBImage from './images/optionB.png';
import optionCImage from './images/optionC.png';

const Voting = () => {
  const [votes, setVotes] = useState({ optionA: 0, optionB: 0, optionC: 0 });
  const [hasVoted, setHasVoted] = useState(false);
  const [message, setMessage] = useState('');

  const handleVote = (option) => {
    if (!hasVoted) {
      setVotes((prevVotes) => ({
        ...prevVotes,
        [option]: prevVotes[option] + 1,
      }));
      setHasVoted(true);
      setMessage('Thank you for voting!');
    } else {
      setMessage('You can\'t cast another vote.');
    }
  };

  return (
    <div className="voting-container">
      <h1>Vote for Your Favorite Party</h1>
      <div className="options-container">
        <div className="option">
          <div className="option-content">
            <img src={optionAImage} alt="Option A" className="party-image" />
            <span>BJP</span>
          </div>
          <div className="vote-display">
            <span>Votes: {votes.optionA}</span>
          </div>
          <button onClick={() => handleVote('optionA')}>Vote</button>
        </div>
        <div className="option">
          <div className="option-content">
            <img src={optionBImage} alt="Option B" className="party-image" />
            <span>CONGRESS</span>
          </div>
          <div className="vote-display">
            <span>Votes: {votes.optionB}</span>
          </div>
          <button onClick={() => handleVote('optionB')}>Vote</button>
        </div>
        <div className="option">
          <div className="option-content">
            <img src={optionCImage} alt="Option C" className="party-image" />
            <span>BRS</span>
          </div>
          <div className="vote-display">
            <span>Votes: {votes.optionC}</span>
          </div>
          <button onClick={() => handleVote('optionC')}>Vote</button>
        </div>
      </div>
      {message && (
        <h2 className={message === 'You can\'t cast another vote.' ? 'error-message' : ''}>
          {message}
        </h2>
      )}
    </div>
  );
};

export default Voting;





/* src/Voting.css */
.voting-container {
  text-align: center;
  margin: 20px;
}

.options-container {
  display: flex;
  flex-direction: row; /* Arrange options in a row */
  justify-content: center; /* Center align options */
  gap: 10px; /* Space between options */
}

.option {
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 8px; /* Reduced padding */
  background-color: #f9f9f9;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  min-width: 120px; /* Reduced minimum width */
  display: flex;
  flex-direction: column; /* Stack content vertically */
  align-items: center; /* Center align items */
  font-size: 12px; /* Smaller font size for better fit */
}

.option-content {
  display: flex; /* Flex container for image and name */
  align-items: center; /* Center align image and name vertically */
  gap: 5px; /* Space between image and name */
}

.party-image {
  width: 30px; /* Adjusted size */
  height: auto; /* Maintain aspect ratio */
}

.vote-display {
  margin: 5px 0; /* Space between vote count and button */
  font-weight: bold; /* Make vote display bold */
}

button {
  margin-top: 5px; /* Space above button */
  padding: 5px 8px; /* Reduced padding for buttons */
  font-size: 12px; /* Smaller font size */
  cursor: pointer;
}

h1 {
  font-size: 18px; /* Smaller heading size */
  color: #716f6f;
  text-align: center; /* Center align h1 */
}
h3 {
  font-size: 18px; /* Smaller heading size */
  color: #8e30d1;
  text-align: center; /* Center align h1 */
}
h2 {
  color: green;
  font-size: 14px; /* Smaller size for thank you message */
  text-align: center; /* Center align h2 */
  font-family: 'Arial', sans-serif; /* Change font family */
}

.error-message {
  color: red; /* Set text color to red for error messages */
}
